package com.namelessmc.java_api.modules.store;

import com.google.gson.JsonObject;
import com.namelessmc.java_api.util.GsonHelper;
import java.util.List;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.optional.OptionalChecker")
public class StoreProduct {

    private final  @org.checkerframework.checker.optional.qual.MaybePresent int id;

    private final  @org.checkerframework.checker.optional.qual.MaybePresent int categoryId;

    private final @org.checkerframework.checker.optional.qual.MaybePresent String name;

    private final  @org.checkerframework.checker.optional.qual.MaybePresent int priceCents;

    private final  @org.checkerframework.checker.optional.qual.MaybePresent boolean hidden;

    private final  @org.checkerframework.checker.optional.qual.MaybePresent boolean disabled;

    private final  @org.checkerframework.checker.optional.qual.MaybePresent int @org.checkerframework.checker.optional.qual.MaybePresent [] requiredProductsIds;

    private final  @org.checkerframework.checker.optional.qual.MaybePresent int @org.checkerframework.checker.optional.qual.MaybePresent [] requiredGroupsIds;

    private final  @org.checkerframework.checker.optional.qual.MaybePresent int @org.checkerframework.checker.optional.qual.MaybePresent [] requiredIntegrationsIds;

    private final @org.checkerframework.checker.optional.qual.MaybePresent String descriptionHtml;

    private final @org.checkerframework.checker.optional.qual.MaybePresent List<StoreProductField> fields;

    private final @org.checkerframework.checker.optional.qual.MaybePresent List<StoreProductAction> actions;

    StoreProduct(@org.checkerframework.checker.optional.qual.MaybePresent JsonObject json) {
        if (!json.has("price_cents")) {
            throw new IllegalArgumentException("Missing price_cents, are you using an old store module version?");
        }
        this.id = json.get("id").getAsInt();
        this.categoryId = json.get("category_id").getAsInt();
        this.name = json.get("name").getAsString();
        this.priceCents = json.get("price_cents").getAsInt();
        this.hidden = json.get("hidden").getAsBoolean();
        this.disabled = json.get("disabled").getAsBoolean();
        this.requiredProductsIds = GsonHelper.toIntArray(json.getAsJsonArray("required_products"));
        this.requiredGroupsIds = GsonHelper.toIntArray(json.getAsJsonArray("required_groups"));
        this.requiredIntegrationsIds = GsonHelper.toIntArray(json.getAsJsonArray("required_integrations"));
        this.descriptionHtml = json.get("description").getAsString();
        this.fields = GsonHelper.toObjectList(json.getAsJsonArray("fields"), StoreProductField::new);
        this.actions = GsonHelper.toObjectList(json.getAsJsonArray("actions"), StoreProductAction::new);
    }

    @org.checkerframework.dataflow.qual.Pure
    public  @org.checkerframework.checker.optional.qual.MaybePresent int id(@org.checkerframework.checker.optional.qual.MaybePresent StoreProduct this) {
        return this.id;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  @org.checkerframework.checker.optional.qual.MaybePresent int categoryId() {
        return this.categoryId;
    }

    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.optional.qual.MaybePresent String name() {
        return this.name;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  @org.checkerframework.checker.optional.qual.MaybePresent int priceCents() {
        return this.priceCents;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  @org.checkerframework.checker.optional.qual.MaybePresent boolean isHidden() {
        return this.hidden;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  @org.checkerframework.checker.optional.qual.MaybePresent boolean isDisabled() {
        return this.disabled;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  @org.checkerframework.checker.optional.qual.MaybePresent int @org.checkerframework.checker.optional.qual.MaybePresent [] requiredProductsIds() {
        return this.requiredProductsIds;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  @org.checkerframework.checker.optional.qual.MaybePresent int @org.checkerframework.checker.optional.qual.MaybePresent [] requiredGroupsIds() {
        return this.requiredGroupsIds;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  @org.checkerframework.checker.optional.qual.MaybePresent int @org.checkerframework.checker.optional.qual.MaybePresent [] requiredIntegrationsIds() {
        return this.requiredIntegrationsIds;
    }

    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.optional.qual.MaybePresent String descriptionHtml() {
        return this.descriptionHtml;
    }

    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.optional.qual.MaybePresent List<StoreProductField> fields() {
        return this.fields;
    }

    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.optional.qual.MaybePresent List<StoreProductAction> actions() {
        return this.actions;
    }
}
