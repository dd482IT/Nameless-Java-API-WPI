package com.namelessmc.java_api.modules.store;

import com.google.gson.JsonObject;
import com.namelessmc.java_api.util.GsonHelper;
import java.util.List;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.regex.RegexChecker")
public class StoreProduct {

    private final   int id;

    private final   int categoryId;

    private final  String name;

    private final   int priceCents;

    private final   boolean hidden;

    private final   boolean disabled;

    private final   int  [] requiredProductsIds;

    private final   int  [] requiredGroupsIds;

    private final   int  [] requiredIntegrationsIds;

    private final  String descriptionHtml;

    private final  List<StoreProductField> fields;

    private final  List<StoreProductAction> actions;

    StoreProduct( JsonObject json) {
        if (!json.has("price_cents")) {
            throw new IllegalArgumentException("Missing price_cents, are you using an old store module version?");
        }
        this.id = json.get("id").getAsInt();
        this.categoryId = json.get("category_id").getAsInt();
        this.name = json.get("name").getAsString();
        this.priceCents = json.get("price_cents").getAsInt();
        this.hidden = json.get("hidden").getAsBoolean();
        this.disabled = json.get("disabled").getAsBoolean();
        this.requiredProductsIds = GsonHelper.toIntArray(json.getAsJsonArray("required_products"));
        this.requiredGroupsIds = GsonHelper.toIntArray(json.getAsJsonArray("required_groups"));
        this.requiredIntegrationsIds = GsonHelper.toIntArray(json.getAsJsonArray("required_integrations"));
        this.descriptionHtml = json.get("description").getAsString();
        this.fields = GsonHelper.toObjectList(json.getAsJsonArray("fields"), StoreProductField::new);
        this.actions = GsonHelper.toObjectList(json.getAsJsonArray("actions"), StoreProductAction::new);
    }

    @org.checkerframework.dataflow.qual.Pure
    public   int id( StoreProduct this) {
        return this.id;
    }

    @org.checkerframework.dataflow.qual.Pure
    public   int categoryId() {
        return this.categoryId;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  String name() {
        return this.name;
    }

    @org.checkerframework.dataflow.qual.Pure
    public   int priceCents() {
        return this.priceCents;
    }

    @org.checkerframework.dataflow.qual.Pure
    public   boolean isHidden() {
        return this.hidden;
    }

    @org.checkerframework.dataflow.qual.Pure
    public   boolean isDisabled() {
        return this.disabled;
    }

    @org.checkerframework.dataflow.qual.Pure
    public   int  [] requiredProductsIds() {
        return this.requiredProductsIds;
    }

    @org.checkerframework.dataflow.qual.Pure
    public   int  [] requiredGroupsIds() {
        return this.requiredGroupsIds;
    }

    @org.checkerframework.dataflow.qual.Pure
    public   int  [] requiredIntegrationsIds() {
        return this.requiredIntegrationsIds;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  String descriptionHtml() {
        return this.descriptionHtml;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  List<StoreProductField> fields() {
        return this.fields;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  List<StoreProductAction> actions() {
        return this.actions;
    }
}
