package com.namelessmc.java_api;

import com.google.gson.JsonObject;
import org.checkerframework.checker.nullness.qual.NonNull;
import org.checkerframework.checker.nullness.qual.Nullable;
import java.util.Objects;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.optional.OptionalChecker")
public class Group implements Comparable<Group> {

    private final  @org.checkerframework.checker.optional.qual.MaybePresent int id;

    private final @org.checkerframework.checker.optional.qual.MaybePresent String name;

    private final  @org.checkerframework.checker.optional.qual.MaybePresent int order;

    private final  @org.checkerframework.checker.optional.qual.MaybePresent boolean staff;

    Group(final @org.checkerframework.checker.optional.qual.MaybePresent JsonObject group) {
        this.id = group.get("id").getAsInt();
        this.name = group.get("name").getAsString();
        this.order = group.get("order").getAsInt();
        this.staff = group.has("staff") && group.get("staff").getAsBoolean();
    }

    @org.checkerframework.dataflow.qual.Pure
    public  @org.checkerframework.checker.optional.qual.MaybePresent int getId(@org.checkerframework.checker.optional.qual.MaybePresent Group this) {
        return this.id;
    }

    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.optional.qual.MaybePresent String getName() {
        return this.name;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  @org.checkerframework.checker.optional.qual.MaybePresent int getOrder() {
        return this.order;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  @org.checkerframework.checker.optional.qual.MaybePresent boolean isStaff() {
        return this.staff;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  @org.checkerframework.checker.optional.qual.MaybePresent int compareTo(@org.checkerframework.checker.optional.qual.MaybePresent Group this, final @org.checkerframework.checker.optional.qual.MaybePresent Group other) {
        return this.order - other.order;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  @org.checkerframework.checker.optional.qual.MaybePresent boolean equals(@org.checkerframework.checker.optional.qual.MaybePresent Group this, final @org.checkerframework.checker.optional.qual.MaybePresent Object other) {
        return other instanceof Group && ((Group) other).id == this.id;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  @org.checkerframework.checker.optional.qual.MaybePresent int hashCode(@org.checkerframework.checker.optional.qual.MaybePresent Group this) {
        return Objects.hash(839891, id);
    }

    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.optional.qual.MaybePresent String toString(@org.checkerframework.checker.optional.qual.MaybePresent Group this) {
        return "Group[id=" + id + ",name=" + name + "]";
    }
}
